/*
 * This source file was generated by the Gradle 'init' task
 */
package work.bit.rexi;

import java.text.ParseException;
import org.apache.commons.cli.*;

public class App {

    public static String getGreeting() {
        return "REXI - Redis Export/Import Tool V 1.0";
    };

    /*
     * Rexi takes the following arguments
     * export or import
     * -h The host where Redis is running. default 127.0.0.1
     * -p The port where Redis is running. default 6379
     * -a The password for Redis. If not provided, no password will be
     * used.
     * -d The database index to use (0-indexed). Default is 0.
     * -k The path to the CSV file containing key-value pairs. default is
     * KeyBatch.csv
     * -f datFile: The path to the DAT file containing key-value pairs. default is
     * KeyBatch.dat
     * 
     * 
     */
    public static void main(String[] args) {
        System.out.println(getGreeting());
        String currentDir = System.getProperty("user.dir");
        System.out.println("Current working directory: " + currentDir);

        Options options = new Options();
        options.addOption("h", "host", true, "Redis host (default: 127.0.0.1)");
        options.addOption("p", "port", true, "Redis port (default: 6379)");
        options.addOption("a", "auth", true, "Redis password");
        options.addOption("d", "db", true, "Redis database index (default: 0)");
        options.addOption("k", "keys", true, "CSV file path (default: KeyBatch.csv)");
        options.addOption("f", "file", true, "DAT file path (default: KeyBatch.dat)");
        options.addOption("o", "operation", true, "Operation: export or import");

        CommandLineParser parser = new DefaultParser();
        HelpFormatter formatter = new HelpFormatter();

        try {
            CommandLine cmd = parser.parse(options, args);

            String operation = cmd.getOptionValue("o", "export");
            String redisHost = cmd.getOptionValue("h", "127.0.0.1");
            int redisPort = Integer.parseInt(cmd.getOptionValue("p", "6379"));
            String redisPassword = cmd.getOptionValue("a");
            int dbIndex = Integer.parseInt(cmd.getOptionValue("d", "0"));
            String csvFile = cmd.getOptionValue("k", "KeyBatch.csv");
            String datFile = cmd.getOptionValue("f", "KeyBatch.dat");

            KeyBatchTool tool = redisPassword == null ? new KeyBatchTool(redisHost, redisPort, dbIndex)
                    : new KeyBatchTool(redisHost, redisPort, dbIndex, redisPassword);

            tool.setCsvFilePath(csvFile);
            tool.setDatFilePath(datFile);

            switch (operation.toLowerCase()) {
                case "export":
                    System.out.println("Exporting keys...");
                    tool.exportKeys();
                    break;
                case "import":
                    System.out.println("Importing keys...");
                    tool.importKeys();
                    break;
                default:
                    System.out.println("Invalid operation. Use 'export' or 'import'.");
                    formatter.printHelp("rexi", options);
                    return;
            }

            System.out.println("Operation completed successfully.");
        } catch (ParseException e) {
            System.out.println(e.getMessage());
            formatter.printHelp("rexi", options);
        } catch (Exception e) {
            System.err.println("An error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
